(let ([zero (lambda (f) (lambda (x) x))])
     (let ([succ (lambda (n) (lambda (f) (lambda (x) (f ((n f) x)))))])
          (let ([one (succ zero)])
               (let ([two (succ one)])
                    (let ([add (lambda (a b) ((b succ) a))])
                         (let ([mult (lambda (a b) ((a (lambda (x) (add x b))) zero))])
                                        (let ([eval (lambda (n) ((n (lambda (n) (+ n 1))) 0))])
                                                (print (eval (mult two (mult two (mult two (mult two (mult two (mult two (mult two (mult two (mult two (mult two two)))))))))))))))))))
